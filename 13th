1)#include <iostream>
using namespace std;

int main() {
    int matrix[5][5];

    // Assigning 10 to every index
    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < 5; j++) {
            matrix[i][j] = 10;
        }
    }

    // Printing the matrix
    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < 5; j++) {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}

2)#include <iostream>
using namespace std;

int main() {
    int A[3][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};
    int B[3][3] = {{4, 5, 8}, {0, 0, 8}, {1, 2, 0}};

    // Adding two matrices and storing in A
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            A[i][j] += B[i][j];
        }
    }

    // Printing the resulting matrix
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            cout << A[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}

3)#include <iostream>
using namespace std;

int sumRectangle(int A[][4], int l1, int r1, int l2, int r2) {
    int sum = 0;
    for (int i = l1; i <= l2; i++) {
        for (int j = r1; j <= r2; j++) {
            sum += A[i][j];
        }
    }
    return sum;
}

int main() {
    int A[4][4] = {{1, 2, -3, 4}, {0, 0, -4, 2}, {1, -1, 2, 3}, {-4, -5, -7, 0}};

    cout << "Sum: " << sumRectangle(A, 1, 2, 3, 3) << endl;
    cout << "Sum: " << sumRectangle(A, 1, 0, 0, 3) << endl;

    return 0;
}

4)#include <iostream>
using namespace std;

int findMax(int A[][4], int rows, int cols) {
    int maxElement = A[0][0];
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            if (A[i][j] > maxElement) {
                maxElement = A[i][j];
            }
        }
    }
    return maxElement;
}

int main() {
    int A[4][4] = {{1, 3, 4, 6}, {2, 4, 5, 7}, {3, 5, 6, 8}, {4, 6, 7, 9}};

    cout << "Largest element: " << findMax(A, 4, 4) << endl;
    return 0;
}

5)#include <iostream>
using namespace std;

int findMaxRow(int A[][4], int rows, int cols) {
    int maxSum = 0, maxRow = 0;
    
    for (int i = 0; i < rows; i++) {
        int sum = 0;
        for (int j = 0; j < cols; j++) {
            sum += A[i][j];
        }
        if (sum > maxSum) {
            maxSum = sum;
            maxRow = i;
        }
    }
    
    return maxRow;
}

int main() {
    int A[3][4] = {{1, 3, 5, 7}, {3, 4, 7, 8}, {1, 4, 12, 3}};

    cout << "Row with maximum sum: " << findMaxRow(A, 3, 4) << endl;
    return 0;
}

6)#include <iostream>
using namespace std;

void printMiddleElements(int A[][5], int size) {
    int mid = size / 2;

    // Printing middle row
    for (int i = 0; i < size; i++) {
        cout << A[mid][i] << " ";
    }
    cout << endl;

    // Printing middle column
    for (int i = 0; i < size; i++) {
        cout << A[i][mid] << endl;
    }
}

int main() {
    int A[5][5] = {
        {1, 2, 3, 4, 5},
        {3, 4, 5, 6, 7},
        {7, 6, 5, 4, 3},
        {8, 7, 6, 5, 4},
        {1, 2, 37, 8, 0}
    };

    printMiddleElements(A, 5);
    return 0;
}
