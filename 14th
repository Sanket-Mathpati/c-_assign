1)#include <iostream>
using namespace std;

void printDiagonals(int A[][3], int size) {
    for (int i = 0; i < size; i++) {
        cout << A[i][i] << " ";  // Primary diagonal
    }
    cout << endl;

    for (int i = 0; i < size; i++) {
        if (i != size - 1 - i)  // Avoid duplicate for center element in odd size matrix
            cout << A[i][size - 1 - i] << " ";
    }
    cout << endl;
}

int main() {
    int A[3][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};

    printDiagonals(A, 3);
    return 0;
}

2)#include <iostream>
using namespace std;

void rotateMatrix(int A[][3], int size) {
    int rotated[3][3];

    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            rotated[size - j - 1][i] = A[i][j];
        }
    }

    // Print rotated matrix
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            cout << rotated[i][j] << " ";
        }
        cout << endl;
    }
}

int main() {
    int A[3][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};

    rotateMatrix(A, 3);
    return 0;
}

3)#include <iostream>
using namespace std;

void printWaveForm(int A[][3], int size) {
    for (int j = 0; j < size; j++) {
        if (j % 2 == 0) {
            for (int i = size - 1; i >= 0; i--) {
                cout << A[i][j] << " ";
            }
        } else {
            for (int i = 0; i < size; i++) {
                cout << A[i][j] << " ";
            }
        }
    }
}

int main() {
    int A[3][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};

    printWaveForm(A, 3);
    return 0;
}

4)#include <iostream>
using namespace std;

void generateSpiralMatrix(int n) {
    int A[n][n];
    int left = 0, right = n - 1, top = 0, bottom = n - 1;
    int num = 1;

    while (left <= right && top <= bottom) {
        for (int i = left; i <= right; i++) A[top][i] = num++;
        top++;

        for (int i = top; i <= bottom; i++) A[i][right] = num++;
        right--;

        if (top <= bottom) {
            for (int i = right; i >= left; i--) A[bottom][i] = num++;
            bottom--;
        }

        if (left <= right) {
            for (int i = bottom; i >= top; i--) A[i][left] = num++;
            left++;
        }
    }

    // Print the matrix
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cout << A[i][j] << " ";
        }
        cout << endl;
    }
}

int main() {
    int n;
    cout << "Enter n: ";
    cin >> n;
    generateSpiralMatrix(n);
    return 0;
}
