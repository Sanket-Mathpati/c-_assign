1)#include <iostream>
using namespace std;

int countGreaterThanX(int arr[], int size, int x) {
    int count = 0;
    for (int i = 0; i < size; i++) {
        if (arr[i] > x) {
            count++;
        }
    }
    return count;
}

int main() {
    int arr[] = {1, 5, 7, 10, 12, 15};
    int size = sizeof(arr) / sizeof(arr[0]);
    int x = 7;
    cout << "Count of elements greater than " << x << " is: " << countGreaterThanX(arr, size, x) << endl;
    return 0;
}

2)#include <iostream>
#include <climits>
using namespace std;

void findLargestThree(int arr[], int size) {
    int first = INT_MIN, second = INT_MIN, third = INT_MIN;
    
    for (int i = 0; i < size; i++) {
        if (arr[i] > first) {
            third = second;
            second = first;
            first = arr[i];
        } else if (arr[i] > second && arr[i] != first) {
            third = second;
            second = arr[i];
        } else if (arr[i] > third && arr[i] != second) {
            third = arr[i];
        }
    }

    cout << "Largest three elements: " << first << ", " << second << ", " << third << endl;
}

int main() {
    int arr[] = {10, 4, 3, 50, 23, 90};
    int size = sizeof(arr) / sizeof(arr[0]);
    findLargestThree(arr, size);
    return 0;
}

3)#include <iostream>
using namespace std;

bool isSorted(int arr[], int size) {
    for (int i = 1; i < size; i++) {
        if (arr[i] < arr[i - 1]) {
            return false;
        }
    }
    return true;
}

int main() {
    int arr[] = {1, 2, 3, 4, 5, 6};
    int size = sizeof(arr) / sizeof(arr[0]);
    
    if (isSorted(arr, size))
        cout << "Array is sorted" << endl;
    else
        cout << "Array is not sorted" << endl;
    
    return 0;
}

4)#include <iostream>
using namespace std;

int differenceEvenOddIndices(int arr[], int size) {
    int evenSum = 0, oddSum = 0;

    for (int i = 0; i < size; i++) {
        if (i % 2 == 0) {
            evenSum += arr[i];
        } else {
            oddSum += arr[i];
        }
    }

    return evenSum - oddSum;
}

int main() {
    int arr[] = {1, 2, 3, 4, 5, 6};
    int size = sizeof(arr) / sizeof(arr[0]);
    cout << "Difference: " << differenceEvenOddIndices(arr, size) << endl;
    return 0;
}

5)#include <iostream>
using namespace std;

void modifyArray(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        if (i % 2 == 0) {
            arr[i] += 10;
        } else {
            arr[i] *= 2;
        }
    }
}

int main() {
    int arr[] = {1, 2, 3, 4, 5, 6};
    int size = sizeof(arr) / sizeof(arr[0]);

    modifyArray(arr, size);
    
    cout << "Modified array: ";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    return 0;
}

6)#include <iostream>
using namespace std;

int findUnique(int arr[], int size) {
    int unique = 0;
    for (int i = 0; i < size; i++) {
        unique ^= arr[i]; // XOR cancels out duplicate numbers
    }
    return unique;
}

int main() {
    int arr[] = {1, 2, 3, 2, 1, 3, 5}; // 5 is unique
    int size = sizeof(arr) / sizeof(arr[0]);
    
    cout << "Unique number: " << findUnique(arr, size) << endl;
    return 0;
}

7)#include <iostream>
using namespace std;

bool isPalindrome(int arr[], int size) {
    for (int i = 0; i < size / 2; i++) {
        if (arr[i] != arr[size - 1 - i]) {
            return false;
        }
    }
    return true;
}

int main() {
    int arr[] = {1, 2, 3, 2, 1};
    int size = sizeof(arr) / sizeof(arr[0]);

    if (isPalindrome(arr, size))
        cout << "Array is a palindrome" << endl;
    else
        cout << "Array is not a palindrome" << endl;

    return 0;
}
8)balance[0] is an integer, but getAverage() expects an array.
The correct function call should pass balance (the whole array), not balance[0].
